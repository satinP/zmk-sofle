#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    hml: hml {
        compatible = "zmk,behavior-hold-tap";
        label = "HML";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        require-prior-idle-ms = <150>;
        flavor = "balanced";
        hold-trigger-key-positions = <59 60 46 33 20 7 8 21 8 10 11 12 21 22 23 24 25 34 35 36 37 38 47 48 49 50 51 61 62 63 9>;
        hold-trigger-on-release;
    };

    hmr: hmr {
        compatible = "zmk,behavior-hold-tap";
        label = "HMR";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        require-prior-idle-ms = <150>;
        flavor = "balanced";
        hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 26 27 28 29 30 31 39 40 41 42 43 44 53 54 55 56 57 52>;
        hold-trigger-on-release;
    };

    hmmods: hmmods {
        compatible = "zmk,behavior-hold-tap";
        label = "HMMODS";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <180>;
        flavor = "tap-preferred";
    };

    combos {
        compatible = "zmk,combos";

        toggle-home-row {
            timeout-ms = <30>;
            bindings = <&tog 5>;
            key-positions = <56 60>;
        };

        left_bracket {
            timeout-ms = <30>;
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <43 44>;
        };

        right_bracket {
            timeout-ms = <30>;
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <46 47>;
        };

        left_paren {
            timeout-ms = <30>;
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <30 31>;
        };

        right_paren {
            timeout-ms = <30>;
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <33 34>;
        };

        left_brace {
            timeout-ms = <30>;
            bindings = <&kp LEFT_BRACE>;
            key-positions = <17 18>;
        };

        right_brace {
            timeout-ms = <30>;
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <20 21>;
        };

        pipe {
            timeout-ms = <30>;
            bindings = <&kp PIPE>;
            key-positions = <31 33>;
        };

        back_slash {
            timeout-ms = <30>;
            bindings = <&kp BACKSLASH>;
            key-positions = <18 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        L0 {
            bindings = <
&kp ESC     &kp N1           &kp N2            &kp N3          &kp N4          &kp N5         &kp UP_ARROW     &kp N6       &kp N7          &kp N8          &kp N9            &kp N0              &kp BACKSPACE
&kp GRAVE   &kp Q            &kp W             &kp E           &kp R           &kp T          &kp DOWN_ARROW   &kp Y        &kp U           &kp I           &kp O             &kp P               &kp BSLH
&kp TAB     &hmmods LCTRL A  &hmmods LSHIFT S  &hmmods LGUI D  &hmmods LALT F  &kp G          &kp LEFT_ARROW   &kp H        &hmmods RALT J  &hmmods LGUI K  &hmmods RSHIFT L  &hmmods RCTRL SEMI  &kp APOS
&kp LSHFT   &kp Z            &kp X             &kp C           &kp V           &kp B          &kp RIGHT_ARROW  &kp N        &kp M           &kp COMMA       &kp DOT           &kp FSLH            &kp ENTER
&kp C_MUTE  &kp LCTRL        &kp LEFT_GUI      &kp LEFT_ALT    &mo 1           &lt 2 SPACE    &kp ENTER        &lt 3 SPACE  &mo 4           &kp ENTER       &kp RIGHT_SHIFT   &kp DELETE
            >;

            display-name = "0";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        L1 {
            bindings = <
&kp ESC          &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp LPAR   &kp RPAR          &trans
&kp GRAVE        &kp QMARK        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp HOME         &kp UP      &kp END    &kp MINUS         &kp EQUAL
&kp TILDE        &trans           &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&rgb_ug RGB_SPD  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE       &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "1";
            sensor-bindings = <&scroll_encoder>;
        };

        L2 {
            display-name = "2";
            bindings = <
&trans  &trans    &trans         &trans     &trans        &trans          &trans  &trans          &trans        &trans            &trans             &trans        &trans
&trans  &kp EXCL  &kp AT         &kp POUND  &kp DLLR      &kp PERCENT     &trans  &kp CARET       &kp AMPS      &kp STAR          &kp LPAR           &kp RPAR      &trans
&trans  &kp PIPE  &kp BACKSLASH  &kp TILDE  &kp MINUS     &kp PLUS        &trans  &kp EQUAL       &kp GRAVE     &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp COLON     &trans
&trans  &trans    &kp SLASH      &trans     &kp QUESTION  &kp KP_MINUS    &trans  &kp UNDERSCORE  &kp QUESTION  &kp LESS_THAN     &kp GREATER_THAN   &kp QUESTION  &trans
&trans  &trans    &trans         &trans     &trans        &trans          &trans  &trans          &trans        &trans            &trans             &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        L3 {
            display-name = "3";
            bindings = <
&trans  &kp F11    &kp F12    &trans     &trans     &trans       &mmv MOVE_UP     &kp F6     &kp F7     &kp F8     &kp F9     &kp F10    &kp UNDER
&trans  &kp LG(Q)  &kp LG(W)  &kp LG(E)  &kp LG(R)  &kp LG(T)    &mmv MOVE_DOWN   &kp LG(Y)  &kp LG(U)  &kp LG(I)  &kp LG(O)  &kp LG(P)  &kp PLUS
&trans  &kp LG(A)  &kp LG(S)  &kp LG(D)  &kp LG(F)  &kp LG(G)    &mmv MOVE_LEFT   &kp LG(H)  &kp LG(J)  &kp LG(K)  &kp LG(L)  &kp LBRC   &kp RBRC
&trans  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(B)    &mmv MOVE_RIGHT  &kp LG(N)  &kp LG(M)  &trans     &trans     &trans     &trans
&trans  &trans     &trans     &trans     &trans     &trans       &mkp LCLK        &trans     &trans     &trans     &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        L4 {
            bindings = <
&kp ESC   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &mmv MOVE_UP     &kp F6                 &kp F7   &kp F8      &kp F9          &kp F10      &trans
&kp CAPS  &trans        &trans        &trans        &trans        &kp LEFT_BRACE          &mmv MOVE_DOWN   &kp RIGHT_BRACE        &kp F11  &kp F12     &trans          &kp UNDER    &kp PLUS
&trans    &trans        &trans        &trans        &trans        &kp LEFT_PARENTHESIS    &mmv MOVE_LEFT   &kp RIGHT_PARENTHESIS  &trans   &trans      &trans          &kp LBRC     &kp RBRC
&trans    &sys_reset    &trans        &bootloader   &trans        &kp LEFT_BRACKET        &mmv MOVE_RIGHT  &kp RIGHT_BRACKET      &trans   &sys_reset  &soft_off       &bootloader  &trans
&trans    &trans        &trans        &trans        &trans        &trans                  &mkp LCLK        &trans                 &trans   &trans      &studio_unlock  &trans
            >;

            display-name = "4";
            sensor-bindings = <&scroll_encoder>;
        };

        no-hr {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4  &kp N5    &kp UP_ARROW     &kp N6  &kp N7  &kp N8     &kp N9           &kp N0      &kp BACKSPACE
&kp GRAVE   &kp Q      &kp W         &kp E         &kp R   &kp T     &kp DOWN_ARROW   &kp Y   &kp U   &kp I      &kp O            &kp P       &kp BSLH
&kp TAB     &kp A      &kp S         &kp D         &kp F   &kp G     &kp LEFT_ARROW   &kp H   &kp J   &kp K      &kp L            &kp SEMI    &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V   &kp B     &kp RIGHT_ARROW  &kp N   &kp M   &kp COMMA  &kp DOT          &kp FSLH    &kp ENTER
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &trans    &kp ENTER        &trans  &mo 4   &kp ENTER  &kp RIGHT_SHIFT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "no-hr";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
